DROP SEQUENCE SEQ_AUTHORITY_CODE;
DROP SEQUENCE SEQ_MENU_CODE;
DROP SEQUENCE SEQ_APPROVER_CODE;
DROP SEQUENCE SEQ_REFERRER_CODE;
DROP SEQUENCE SEQ_TEMP_CODE;
DROP SEQUENCE SEQ_SIGN_COM_CODE;
DROP SEQUENCE SEQ_SIGN_CODE;
DROP SEQUENCE SEQ_SCREENING_CODE;
DROP SEQUENCE SEQ_MOVIE_CODE;
DROP SEQUENCE SEQ_EVENT_CODE;
DROP SEQUENCE SEQ_THEATER_CODE;
DROP SEQUENCE SEQ_PARTTIME_CODE;
DROP SEQUENCE SEQ_SAL_CODE;
DROP SEQUENCE SEQ_ANNUAL_LEAVE_CODE;
DROP SEQUENCE SEQ_AL_CODE;
DROP SEQUENCE SEQ_UAL_CODE;
DROP SEQUENCE SEQ_DEPT_CODE;
DROP SEQUENCE SEQ_RANK_CODE;
DROP SEQUENCE SEQ_EMP_CODE;
DROP SEQUENCE SEQ_SCHEDULE_CODE;
DROP SEQUENCE SEQ_SCHEDULE_CATEGORY_CODE;
DROP SEQUENCE SEQ_WORKCATEGORY_CODE;
DROP SEQUENCE SEQ_WORK_CODE;
DROP SEQUENCE SEQ_OFFICIAL_CODE;
DROP SEQUENCE SEQ_OFFICIAL_FILE_CODE;
DROP SEQUENCE SEQ_NOTICE_CODE;
DROP SEQUENCE SEQ_NOTICE_FILE_CODE;
DROP SEQUENCE SEQ_POST_CODE;
DROP SEQUENCE SEQ_CMT_CODE;


CREATE SEQUENCE SEQ_THEATER_CODE;
CREATE SEQUENCE SEQ_EVENT_CODE;
CREATE SEQUENCE SEQ_MOVIE_CODE;
CREATE SEQUENCE SEQ_SCREENING_CODE;
CREATE SEQUENCE SEQ_AUTHORITY_CODE;
CREATE SEQUENCE SEQ_MENU_CODE;
CREATE SEQUENCE SEQ_APPROVER_CODE;
CREATE SEQUENCE SEQ_REFERRER_CODE;
CREATE SEQUENCE SEQ_TEMP_CODE;
CREATE SEQUENCE SEQ_SIGN_CODE;
CREATE SEQUENCE SEQ_SIGN_COM_CODE;
CREATE SEQUENCE SEQ_PARTTIME_CODE INCREMENT BY 1 START WITH 101;
CREATE SEQUENCE SEQ_SAL_CODE;
CREATE SEQUENCE SEQ_ANNUAL_LEAVE_CODE;
CREATE SEQUENCE SEQ_AL_CODE;
CREATE SEQUENCE SEQ_UAL_CODE;
CREATE SEQUENCE SEQ_DEPT_CODE INCREMENT BY 100 START WITH 100;
CREATE SEQUENCE SEQ_RANK_CODE INCREMENT BY 100 START WITH 100;
CREATE SEQUENCE SEQ_EMP_CODE INCREMENT BY 1 START WITH 100;
CREATE SEQUENCE SEQ_SCHEDULE_CODE;
CREATE SEQUENCE SEQ_SCHEDULE_CATEGORY_CODE;
CREATE SEQUENCE SEQ_WORKCATEGORY_CODE;
CREATE SEQUENCE SEQ_WORK_CODE;
CREATE SEQUENCE SEQ_OFFICIAL_CODE;
CREATE SEQUENCE SEQ_OFFICIAL_FILE_CODE;
CREATE SEQUENCE SEQ_NOTICE_CODE;
CREATE SEQUENCE SEQ_NOTICE_FILE_CODE;
CREATE SEQUENCE SEQ_POST_CODE;
CREATE SEQUENCE SEQ_CMT_CODE;


--영화
DROP TABLE SCREENING_SCHEDULE;
DROP TABLE EVENT;
DROP TABLE MOVIE;
DROP TABLE THEATER;
--게시판
DROP TABLE OFFICIAL_FILE;
DROP TABLE OFFICIAL;
DROP TABLE NOTICE_FILE;
DROP TABLE NOTICE;
DROP TABLE CMT;
DROP TABLE BLIND_POST;
--결재
DROP TABLE SIGN_COMMENT;
DROP TABLE REFERRER;
DROP TABLE APPROVER;
DROP TABLE SIGN;
DROP TABLE SIGN_TEMPLATE;
--인사관리
DROP TABLE USE_ANNUAL_LEAVE CASCADE CONSTRAINTS;
DROP TABLE ANNUAL_LEAVE CASCADE CONSTRAINTS;
DROP TABLE ANNUAL_LEAVE_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE SALARY CASCADE CONSTRAINTS;
DROP TABLE EGV_WORK CASCADE CONSTRAINTS;
DROP TABLE WORKTYPE_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE PARTTIME_SCHEDULE CASCADE CONSTRAINTS;
--일정
DROP TABLE SCHEDULE_CATEGORY CASCADE CONSTRAINTS;
DROP TABLE SCHEDULE CASCADE CONSTRAINTS;
--권한
DROP TABLE AUTHORITY_MENU;
DROP TABLE EMPLOYEE_AUTHORITY;
DROP TABLE MENU;
DROP TABLE AUTHORITY;
--사원
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE DEPARTMENT CASCADE CONSTRAINTS;
DROP TABLE EMP_RANK CASCADE CONSTRAINTS;









/* 사원 */
---------------------------------------------------------------DEPARTMENT / 부서----------------------------
CREATE TABLE DEPARTMENT (
	DEPT_CODE NUMBER NOT NULL,
	DEPT_NAME VARCHAR2(100) NOT NULL,
	DEPT_YN	VARCHAR2(10) DEFAULT 'Y' NOT NULL,
    CONSTRAINT CK_DEPT_YN CHECK(DEPT_YN IN ('Y', 'N')),
    CONSTRAINT PK_DEPT_CODE PRIMARY KEY (DEPT_CODE)
);

COMMENT ON COLUMN DEPARTMENT.DEPT_CODE IS '부서코드';
COMMENT ON COLUMN DEPARTMENT.DEPT_NAME IS '부서명';
COMMENT ON COLUMN DEPARTMENT.DEPT_YN IS '부서 활성여부';

INSERT
  INTO DEPARTMENT
VALUES
(
SEQ_DEPT_CODE.NEXTVAL,
'인사부', DEFAULT
);
INSERT
  INTO DEPARTMENT
VALUES
(
SEQ_DEPT_CODE.NEXTVAL,
'총무부', DEFAULT
);
INSERT
  INTO DEPARTMENT
VALUES
(
SEQ_DEPT_CODE.NEXTVAL,
'기획부', DEFAULT
);
INSERT
  INTO DEPARTMENT
VALUES
(
SEQ_DEPT_CODE.NEXTVAL,
'회계부', DEFAULT
);
INSERT
  INTO DEPARTMENT
VALUES
(
SEQ_DEPT_CODE.NEXTVAL,
'영업부', DEFAULT
);

-----------------------------------------------------------------EMP_RANK / 직급----------------------------
CREATE TABLE EMP_RANK (
	RANK_CODE NUMBER NOT NULL,
	RANK_NAME VARCHAR2(100) NOT NULL,
	RANK_SALARY	NUMBER NOT NULL,
	RANK_YN	VARCHAR2(10) DEFAULT 'Y' NOT NULL,
    CONSTRAINT CK_RANK_YN CHECK(RANK_YN IN ('Y', 'N')),
    CONSTRAINT PK_RANK_CODE PRIMARY KEY (RANK_CODE)
);

COMMENT ON COLUMN EMP_RANK.RANK_CODE IS '직급코드';
COMMENT ON COLUMN EMP_RANK.RANK_NAME IS '직급명';
COMMENT ON COLUMN EMP_RANK.RANK_SALARY IS '연봉';
COMMENT ON COLUMN EMP_RANK.RANK_YN IS '직위/직급 활성여부';

INSERT
  INTO EMP_RANK
VALUES
(
SEQ_RANK_CODE.NEXTVAL,
'관장', 10000, DEFAULT
);
INSERT
  INTO EMP_RANK
VALUES
(
SEQ_RANK_CODE.NEXTVAL,
'부장', 8000, DEFAULT
);
INSERT
  INTO EMP_RANK
VALUES
(
SEQ_RANK_CODE.NEXTVAL,
'과장', 6000, DEFAULT
);
INSERT
  INTO EMP_RANK
VALUES
(
SEQ_RANK_CODE.NEXTVAL,
'대리', 4000, DEFAULT
);
INSERT
  INTO EMP_RANK
VALUES
(
SEQ_RANK_CODE.NEXTVAL,
'사원', 3000, DEFAULT
);
INSERT
  INTO EMP_RANK
VALUES
(
SEQ_RANK_CODE.NEXTVAL,
'알바', 3000, DEFAULT
);

-----------------------------------------------------------------EMPLOYEE / 사원----------------------------
CREATE TABLE EMPLOYEE (
    EMP_CODE VARCHAR2(255) NOT NULL,
    PWD	VARCHAR2(255) NOT NULL,
    EMP_NAME VARCHAR2(255) NOT NULL,
    ENG_NAME VARCHAR2(255) NOT NULL,
    RRN	VARCHAR2(255) NOT NULL,
    ENT_DATE DATE DEFAULT SYSDATE NOT NULL,
    CAREER_YN CHAR(1) DEFAULT 'N' NOT NULL,
    RANK_CODE NUMBER NOT NULL,
    EMP_POSITION VARCHAR2(255) NOT NULL,
    PHONE_HOME VARCHAR2(255) NOT NULL,
    PHONE_MOBILE VARCHAR2(255) NOT NULL,
    EMAIL VARCHAR2(255) NOT NULL,
    DEPT_CODE NUMBER NOT NULL,
    ACCOUNT_BANK VARCHAR2(255) NOT NULL,
    ACCOUNT_NUM	VARCHAR2(255) NOT NULL,
    ACCOUNT_HOLDER	VARCHAR2(255) NOT NULL,
    ADDRESS	VARCHAR2(500) NOT NULL,
    OUT_YN CHAR(1) DEFAULT 'N'	NOT NULL,
    OUT_DATE DATE,
    OUT_REASON VARCHAR2(1000),
    NOTE VARCHAR2(4000),
    PROFILE_ORIG_NAME VARCHAR2(255),
    PROFILE_UUID_NAME VARCHAR2(255),
    PROFILE_IMG_PATH VARCHAR2(255),
    STAMP_ORIG_NAME	VARCHAR2(255),
    STAMP_UUID_NAME	VARCHAR2(255),
    STAMP_IMG_PATH VARCHAR2(255),
    CONSTRAINT CK_CAREER_YN CHECK(CAREER_YN IN ('Y', 'N')),
    CONSTRAINT CK_OUT_YN CHECK(OUT_YN IN ('Y', 'N')),
    CONSTRAINT PK_EMP_CODE PRIMARY KEY (EMP_CODE),
    CONSTRAINT FK_RANK_CODE FOREIGN KEY (RANK_CODE) REFERENCES EMP_RANK(RANK_CODE),
    CONSTRAINT FK_DEPT_CODE1 FOREIGN KEY (DEPT_CODE) REFERENCES DEPARTMENT(DEPT_CODE)
);

COMMENT ON COLUMN EMPLOYEE.EMP_CODE IS '사번';
COMMENT ON COLUMN EMPLOYEE.PWD IS '비밀번호';
COMMENT ON COLUMN EMPLOYEE.EMP_NAME IS '성명';
COMMENT ON COLUMN EMPLOYEE.ENG_NAME IS '영문성명';
COMMENT ON COLUMN EMPLOYEE.RRN IS '주민등록번호';
COMMENT ON COLUMN EMPLOYEE.ENT_DATE IS '입사일자';
COMMENT ON COLUMN EMPLOYEE.CAREER_YN IS '입사구분';
COMMENT ON COLUMN EMPLOYEE.RANK_CODE IS '직급코드';
COMMENT ON COLUMN EMPLOYEE.EMP_POSITION IS '직책';
COMMENT ON COLUMN EMPLOYEE.PHONE_HOME IS '연락처(집)';
COMMENT ON COLUMN EMPLOYEE.PHONE_MOBILE IS '연락처(모바일)';
COMMENT ON COLUMN EMPLOYEE.EMAIL IS '이메일';
COMMENT ON COLUMN EMPLOYEE.DEPT_CODE IS '부서코드';
COMMENT ON COLUMN EMPLOYEE.ACCOUNT_BANK IS '급여통장-은행';
COMMENT ON COLUMN EMPLOYEE.ACCOUNT_NUM IS '급여통장-계좌번호';
COMMENT ON COLUMN EMPLOYEE.ACCOUNT_HOLDER IS '급여통장-예금주명';
COMMENT ON COLUMN EMPLOYEE.ADDRESS IS '주소';
COMMENT ON COLUMN EMPLOYEE.OUT_YN IS '퇴사여부';
COMMENT ON COLUMN EMPLOYEE.OUT_DATE IS '퇴사일자';
COMMENT ON COLUMN EMPLOYEE.OUT_REASON IS '퇴사사유';
COMMENT ON COLUMN EMPLOYEE.NOTE IS '메모';
COMMENT ON COLUMN EMPLOYEE.PROFILE_ORIG_NAME IS '사진원본명';
COMMENT ON COLUMN EMPLOYEE.PROFILE_UUID_NAME IS '사진신규명';
COMMENT ON COLUMN EMPLOYEE.PROFILE_IMG_PATH IS '사진저장경로';
COMMENT ON COLUMN EMPLOYEE.STAMP_ORIG_NAME IS '도장원본명';
COMMENT ON COLUMN EMPLOYEE.STAMP_UUID_NAME IS '도장신규명';
COMMENT ON COLUMN EMPLOYEE.STAMP_IMG_PATH IS '도장저장경로';

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '김준우',
    'JunWoo Kim', '960403-1224565', SYSDATE,
    'Y', 500 , '사원',
    '0316565514', '01071475514', 'rlawnsdn5514@naver.com',
    100, '시티은행', '1234-12-123456', '김준우',
    '경기도 평택시', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '하동훈',
    'DongHoon Ha', '7908201233458', SYSDATE,
    'Y', 500 , '사원',
    '0314236714', '01010775134', 'hahahaha@naver.com',
    300, '신한은행', '110-281-480100', '하동훈',
    '서울시', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '노홍철',
    'HongChul RHO', '7903311065838', SYSDATE,
    'Y', 500 , '사원',
    '0313047921', '01036894794', 'positive@naver.com',
    400, '국민은행', '110-1234-480100', '노홍철',
    '서울시', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '정형돈',
    'HyungDon Jung', '7802271023128', SYSDATE,
    'Y', 400 , '대리',
    '0317927921', '01023167956', '@hyungdonjung@naver.com',
    200, '신한은행', '110-134-432800', '정형돈',
    '서울시', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '박명수',
    'G Park', '7009271234565', SYSDATE,
    'Y', 200 , '부장',
    '022224444', '01033335555', 'Gpark@naver.com',
    200, '국민은행', '1234-12-123456', '박명수',
    '서울시 강남구', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);
INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '유재석',
    'Jae_seok Yu', '7209271434565', SYSDATE,
    'Y', 100 , '관장',
    '022224444', '0114112222', 'Jae_seok@naver.com',
    400, '국민은행', '723412123456', '유재석',
    '서울시 동작구', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '황광희',
    'KwangHee Hwang', '8808251634565', SYSDATE,
    'Y', 600 , '알바',
    '027228444', '01061117222', 'KwangHH@daum.net',
    400, '신한은행', '1234-42-523456', '황광희',
    '서울시 동작구', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '퇴직자01',
    'ByeBye', '8903231387432', '2019-05-13',
    'N', 600 , '알바',
    '022138784', '01012317832', 'Byebye@naver.com',
    200, '국민은행', '1123-72-54356', '퇴직자01',
    '서울시 관악구', 'Y', SYSDATE,
    '놀고싶어요', NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '퇴직자02',
    'check', '8903231387432', '2020-03-10',
    'N', 200 , '부장',
    '022317846', '01047314568', 'check@naver.com',
    400, '신한은행', '112-779-428641', '퇴직자02',
    '서울시 금천구', 'Y', SYSDATE,
    '쉬고싶어요', NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '퇴직자03',
    'movie', '8607131066235', '2018-10-10',
    'N', 200 , '과장',
    '0235697842', '01087324168', 'movie@naver.com',
    300, '시티은행', '145-935-795133', '퇴직자03',
    '경기도 고양시', 'Y', SYSDATE,
    '지쳤어요', NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '퇴직자04',
    'mater', '8801031087945', '2019-05-08',
    'N', 200 , '대리',
    '0226894222', '01078954222', 'master@naver.com',
    200, '신한은행', '125-123-123475', '퇴직자04',
    '서울시 강서구', 'Y', SYSDATE,
    '집샀어요', NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '퇴직자05',
    'ironman', '7803061057894', '2019-05-08',
    'N', 200 , '대리',
    '0226894222', '01078954222', 'ironman@naver.com',
    300, '시티은행', '125-778-421655', '퇴직자05',
    '경기도 부천시', 'Y', SYSDATE,
    '코인 대박났어요', NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '김주호',
    'JuHo Kim', '9307181111111', '2021-09-03',
    'Y', 600 , '알바',
    '07087268793', '01021114913', 'kjh00345@gmail.com',
    400, '신한은행', '110-281-480100', '김주호',
    '서울시 강서구', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '알바1',
    'Alba1', '9706241597546', '2021-10-13',
    'Y', 600 , '알바',
    '0245683214', '01011246897', 'Alba1@naver.com',
    400, '국민은행', '110-879-135497', '알바1',
    '서울시 동작구', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

INSERT
  INTO EMPLOYEE
(
    EMP_CODE, PWD, EMP_NAME,
    ENG_NAME, RRN, ENT_DATE,
    CAREER_YN, RANK_CODE, EMP_POSITION,
    PHONE_HOME, PHONE_MOBILE, EMAIL,
    DEPT_CODE, ACCOUNT_BANK, ACCOUNT_NUM,
    ACCOUNT_HOLDER, ADDRESS, OUT_YN,
    OUT_DATE, OUT_REASON, NOTE,
    PROFILE_ORIG_NAME, PROFILE_UUID_NAME, PROFILE_IMG_PATH,
    STAMP_ORIG_NAME, STAMP_UUID_NAME, STAMP_IMG_PATH
)
VALUES
(
    RPAD(TO_CHAR(SYSDATE,'YYYY'),7,'0') + SEQ_EMP_CODE.NEXTVAL, '$2a$10$MkdT31pLLNHkZ7fUGmxzxekKMaUeCbVe2nwMSmDrXQSeyyp.0GNEi', '알바2',
    'Alba2', '9504122065798', '2021-09-17',
    'Y', 600 , '알바',
    '0278963465', '01075648912', 'Alba2@naver.com',
    400, '시티은행', '110-795-246878', '알바2',
    '서울시 용산구', DEFAULT, NULL,
    NULL, NULL, NULL,
    NULL, NULL, NULL,
    NULL, NULL
);

/* 권한 */
----------------------------------------------------------------AUTHORITY / 권한----------------------------
CREATE TABLE AUTHORITY (
	AUTHORITY_CODE	NUMBER	NOT NULL,
	AUTHORITY_NAME	VARCHAR2(100)	NOT NULL,
	AUTHORITY_DESC	VARCHAR2(500)	NULL,
	CONSTRAINT PK_AUTHORITY_CODE PRIMARY KEY (AUTHORITY_CODE)
);

COMMENT ON COLUMN AUTHORITY.AUTHORITY_CODE IS '권한코드';
COMMENT ON COLUMN AUTHORITY.AUTHORITY_NAME IS '권한명';
COMMENT ON COLUMN AUTHORITY.AUTHORITY_DESC IS '권한설명';

INSERT
  INTO AUTHORITY
(
  AUTHORITY_CODE
, AUTHORITY_NAME
, AUTHORITY_DESC
)
VALUES
(
  SEQ_AUTHORITY_CODE.NEXTVAL
, 'ROLE_Admin'
, 'Admin만 접근할 수 있습니다.'
);

INSERT
  INTO AUTHORITY
(
  AUTHORITY_CODE
, AUTHORITY_NAME
, AUTHORITY_DESC
)
VALUES
(
  SEQ_AUTHORITY_CODE.NEXTVAL
, 'ROLE_인사담당자'
, 'Admin, 인사담당자만 접근할 수 있습니다.'
);

INSERT
  INTO AUTHORITY
(
  AUTHORITY_CODE
, AUTHORITY_NAME
, AUTHORITY_DESC
)
VALUES
(
  SEQ_AUTHORITY_CODE.NEXTVAL
, 'ROLE_영화담당자'
, 'Admin, 인사담당자만 접근할 수 있습니다.'
);

INSERT
  INTO AUTHORITY
(
  AUTHORITY_CODE
, AUTHORITY_NAME
, AUTHORITY_DESC
)
VALUES
(
  SEQ_AUTHORITY_CODE.NEXTVAL
, 'ROLE_일반사원'
, '모두 접근할 수 있습니다.'
);

--------------------------------------------------EMPLOYEE_AUTHORITY / 회원별권한----------------------------
CREATE TABLE EMPLOYEE_AUTHORITY (
	EMP_CODE	VARCHAR2(255) NOT NULL,
	AUTHORITY_CODE  NUMBER	NOT NULL,
	CONSTRAINT PK_EMPLOYEE_AUTHORITY_CODE PRIMARY KEY (EMP_CODE, AUTHORITY_CODE),
	CONSTRAINT FK_AUTHORITY_EMP_CODE FOREIGN KEY (EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE),
	CONSTRAINT FK_AUTHORITY_CODE FOREIGN KEY (AUTHORITY_CODE) REFERENCES AUTHORITY(AUTHORITY_CODE)
);

COMMENT ON COLUMN EMPLOYEE_AUTHORITY.EMP_CODE IS '사번';
COMMENT ON COLUMN EMPLOYEE_AUTHORITY.AUTHORITY_CODE IS '권한코드';

INSERT
  INTO EMPLOYEE_AUTHORITY
(
  EMP_CODE
, AUTHORITY_CODE
)
VALUES
(
  2021100
, 1
);

INSERT
  INTO EMPLOYEE_AUTHORITY
(
  EMP_CODE
, AUTHORITY_CODE
)
VALUES
(
  2021100
, 2
);

INSERT
  INTO EMPLOYEE_AUTHORITY
(
  EMP_CODE
, AUTHORITY_CODE
)
VALUES
(
  2021100
, 3
);

INSERT
  INTO EMPLOYEE_AUTHORITY
(
  EMP_CODE
, AUTHORITY_CODE
)
VALUES
(
  2021100
, 4
);

INSERT
  INTO EMPLOYEE_AUTHORITY
(
  EMP_CODE
, AUTHORITY_CODE
)
VALUES
(
  2021101
, 2
);

INSERT
  INTO EMPLOYEE_AUTHORITY
(
  EMP_CODE
, AUTHORITY_CODE
)
VALUES
(
  2021101
, 4
);

INSERT
  INTO EMPLOYEE_AUTHORITY
(
  EMP_CODE
, AUTHORITY_CODE
)
VALUES
(
  2021102
, 3
);

INSERT
  INTO EMPLOYEE_AUTHORITY
(
  EMP_CODE
, AUTHORITY_CODE
)
VALUES
(
  2021102
, 4
);

------------------------------------------------------------------MENU / 공통메뉴----------------------------
CREATE TABLE MENU (
	MENU_CODE	NUMBER	NOT NULL,
	MENU_NAME	VARCHAR2(100)	NOT NULL,
	MENU_URL	VARCHAR2(100)	NOT NULL,
	MENU_DESC	VARCHAR2(500)	NULL,
	CONSTRAINT PK_MENU_CODE PRIMARY KEY(MENU_CODE)
);

COMMENT ON COLUMN MENU.MENU_CODE IS '메뉴코드';
COMMENT ON COLUMN MENU.MENU_NAME IS '메뉴명';
COMMENT ON COLUMN MENU.MENU_URL IS '메뉴URL';
COMMENT ON COLUMN MENU.MENU_DESC IS '메뉴설명';


INSERT
  INTO MENU
(
  MENU_CODE
, MENU_NAME
, MENU_URL
, MENU_DESC
)
VALUES
(
  SEQ_MENU_CODE.NEXTVAL
, '메인페이지'
, '/mainpage'
, '메이페이지입니다.'
);

INSERT
  INTO MENU
(
  MENU_CODE
, MENU_NAME
, MENU_URL
, MENU_DESC
)
VALUES
(
  SEQ_MENU_CODE.NEXTVAL
, '인사관리'
, '/empmange'
, '인사관리페이지입니다.'
);

INSERT
  INTO MENU
(
  MENU_CODE
, MENU_NAME
, MENU_URL
, MENU_DESC
)
VALUES
(
  SEQ_MENU_CODE.NEXTVAL
, '영화관관리'
, '/movie'
, '영화관관리페이지입니다.'
);

INSERT
  INTO MENU
(
  MENU_CODE
, MENU_NAME
, MENU_URL
, MENU_DESC
)
VALUES
(
  SEQ_MENU_CODE.NEXTVAL
, '전자결재'
, '/sign'
, '전자결재페이지입니다.'
);

INSERT
  INTO MENU
(
  MENU_CODE
, MENU_NAME
, MENU_URL
, MENU_DESC
)
VALUES
(
  SEQ_MENU_CODE.NEXTVAL
, '커뮤니티'
, '/community'
, '커뮤니티페이지입니다.'
);

-----------------------------------------------AUTHORITY_MENU / 권한별 접근가능메뉴----------------------------
CREATE TABLE AUTHORITY_MENU (
	AUTHORITY_CODE	NUMBER	NOT NULL,
	MENU_CODE	NUMBER	NOT NULL,
	CONSTRAINT PK_AUTHORITY_MENU_CODE PRIMARY KEY (AUTHORITY_CODE, MENU_CODE),
	CONSTRAINT FK_AUTHORITY_MENU_CODE FOREIGN KEY (AUTHORITY_CODE) REFERENCES AUTHORITY(AUTHORITY_CODE),
	CONSTRAINT FK_MENU_CODE FOREIGN KEY (MENU_CODE) REFERENCES MENU(MENU_CODE)
);

COMMENT ON COLUMN AUTHORITY_MENU.AUTHORITY_CODE IS '권한코드';
COMMENT ON COLUMN AUTHORITY_MENU.MENU_CODE IS '메뉴코드';


INSERT
  INTO AUTHORITY_MENU
(
  AUTHORITY_CODE
, MENU_CODE
)
VALUES
(
  1
, 4
);

INSERT
  INTO AUTHORITY_MENU
(
  AUTHORITY_CODE
, MENU_CODE
)
VALUES
(
  2
, 2
);

INSERT
  INTO AUTHORITY_MENU
(
  AUTHORITY_CODE
, MENU_CODE
)
VALUES
(
  3
, 3
);

INSERT
  INTO AUTHORITY_MENU
(
  AUTHORITY_CODE
, MENU_CODE
)
VALUES
(
  4
, 1
);

INSERT
  INTO AUTHORITY_MENU
(
  AUTHORITY_CODE
, MENU_CODE
)
VALUES
(
  4
, 4
);


/* 일정 */
--------------------------------------------------SCHEDULE_CATEGORY / 일정카테고리----------------------------
CREATE TABLE SCHEDULE_CATEGORY (
      -- COLUMN LEVEL CONSTRAINT
      SCHEDULE_CATEGORY_CODE NUMBER,
      SCHEDULE_NAME VARCHAR2(255) CONSTRAINT NN_SCHEDULE_NAME NOT NULL,
      -- TABLE LEVEL CONSTRAINT
      CONSTRAINT PK_SCHEDULE_CATEGORY_CODE PRIMARY KEY (SCHEDULE_CATEGORY_CODE)
      );

COMMENT ON COLUMN SCHEDULE_CATEGORY.SCHEDULE_CATEGORY_CODE IS '일정구분코드';
COMMENT ON COLUMN SCHEDULE_CATEGORY.SCHEDULE_NAME IS '일정구분명';

INSERT INTO SCHEDULE_CATEGORY
(
  SCHEDULE_CATEGORY_CODE
, SCHEDULE_NAME
)
VALUES
(
  SEQ_SCHEDULE_CATEGORY_CODE.NEXTVAL
, '근무'
);
INSERT INTO SCHEDULE_CATEGORY
(
  SCHEDULE_CATEGORY_CODE
, SCHEDULE_NAME
)
VALUES
(
  SEQ_SCHEDULE_CATEGORY_CODE.NEXTVAL
, '휴가'
);
INSERT INTO SCHEDULE_CATEGORY
(
  SCHEDULE_CATEGORY_CODE
, SCHEDULE_NAME
)
VALUES
(
  SEQ_SCHEDULE_CATEGORY_CODE.NEXTVAL
, '외근'
);
INSERT INTO SCHEDULE_CATEGORY
(
  SCHEDULE_CATEGORY_CODE
, SCHEDULE_NAME
)
VALUES
(
  SEQ_SCHEDULE_CATEGORY_CODE.NEXTVAL
, '회의'
);
--------------------------------------------------------------SCHEDULE / 개인일정----------------------------
CREATE TABLE SCHEDULE (
      -- COLUMN LEVEL CONSTRAINT
      SCHEDULE_CODE NUMBER,
      EMP_CODE VARCHAR2(255),
      SCHEDULE_CATEGORY_CODE NUMBER CONSTRAINT NN_SCHEDULE_CATEGORY_CODE NOT NULL,
      SCHEDULE_START_DATE DATE CONSTRAINT NN_SCHEDULE_START_DATE NOT NULL,
      SCHEDULE_END_DATE DATE CONSTRAINT NN_SCHEDULE_END_DATE NOT NULL,
      SCHEDULE_LOCATION VARCHAR2(255) CONSTRAINT NN_SCHEDULE_LOC NOT NULL,
      SCHEDULE_DESC VARCHAR2(4000) CONSTRAINT NN_SCHEDULE_CONTENT NOT NULL,
      -- TABLE LEVEL CONSTRAINT
      CONSTRAINT PK_SCHEDULE_CODE PRIMARY KEY(SCHEDULE_CODE),
      CONSTRAINT FK_EMP_CODE5 FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE),
      CONSTRAINT FK_SCHEDULE_CATEGORY_CODE FOREIGN KEY(SCHEDULE_CATEGORY_CODE) REFERENCES SCHEDULE_CATEGORY(SCHEDULE_CATEGORY_CODE)
);

COMMENT ON COLUMN SCHEDULE.SCHEDULE_CODE IS '개인일정코드';
COMMENT ON COLUMN SCHEDULE.EMP_CODE IS '사번';
COMMENT ON COLUMN SCHEDULE.SCHEDULE_CATEGORY_CODE IS '일정구분코드';
COMMENT ON COLUMN SCHEDULE.SCHEDULE_START_DATE IS '시작일';
COMMENT ON COLUMN SCHEDULE.SCHEDULE_END_DATE IS '종료일';
COMMENT ON COLUMN SCHEDULE.SCHEDULE_LOCATION IS '장소';
COMMENT ON COLUMN SCHEDULE.SCHEDULE_DESC IS '내용';


/* 인사관리 */
---------------------------------------------------PARTTIME_SCHEDULE / 알바스케줄----------------------------
CREATE TABLE PARTTIME_SCHEDULE (
    -- COLUMN LEVEL CONSTRAINT
    PARTTIME_CODE NUMBER,
    EMP_CODE VARCHAR2(255) CONSTRAINT NN_EMP_CODE NOT NULL,
    PARTTIME_START DATE CONSTRAINT NN_PARTTIME_START NOT NULL,
    PARTTIME_END DATE CONSTRAINT NN_PARTTIME_END NOT NULL,
    PARTTIME_TITLE VARCHAR2(255) CONSTRAINT NN_PARTTIME_TITLE NOT NULL,
    PARTTIME_DIVISION VARCHAR2(10) CONSTRAINT NN_PARTTIME_DIVISION NOT NULL,
    -- TABLE LEVEL CONSTRAINT
    CONSTRAINT PK_PARTTIME_CODE PRIMARY KEY(PARTTIME_CODE),
    CONSTRAINT CK_PARTTIME_DIVISION CHECK(PARTTIME_DIVISION IN ('오픈', '마감')),
    CONSTRAINT FK_EMP_CODE6 FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE)
);


    COMMENT ON COLUMN PARTTIME_SCHEDULE.PARTTIME_CODE IS '알바스케줄코드';
    COMMENT ON COLUMN PARTTIME_SCHEDULE.EMP_CODE IS '사번';
    COMMENT ON COLUMN PARTTIME_SCHEDULE.PARTTIME_START IS '시작날짜';
    COMMENT ON COLUMN PARTTIME_SCHEDULE.PARTTIME_END IS '종료날짜';
    COMMENT ON COLUMN PARTTIME_SCHEDULE.PARTTIME_TITLE IS '타이틀';
    COMMENT ON COLUMN PARTTIME_SCHEDULE.PARTTIME_DIVISION IS '시간구분';

----------------------------------------------WORKTYPE_CATEGORY / 근무항목카테고리----------------------------
CREATE TABLE WORKTYPE_CATEGORY (
      -- COLUMN LEVEL CONSTRAINT
      WORKCATEGORY_CODE NUMBER,
      WORK_TYPE VARCHAR2(100) CONSTRAINT NN_WORK_TYPE NOT NULL,
      -- TABLE LEVEL CONSTRAINT
      CONSTRAINT PK_WORKCATEGORY_CODE PRIMARY KEY (WORKCATEGORY_CODE)
      );

COMMENT ON COLUMN WORKTYPE_CATEGORY.WORKCATEGORY_CODE IS '근무항목코드';
COMMENT ON COLUMN WORKTYPE_CATEGORY.WORK_TYPE IS '근무항목';

INSERT INTO WORKTYPE_CATEGORY
(
  WORKCATEGORY_CODE
, WORK_TYPE
)
VALUES
(
  SEQ_WORKCATEGORY_CODE.NEXTVAL
, '야간근무'
);
INSERT INTO WORKTYPE_CATEGORY
(
  WORKCATEGORY_CODE
, WORK_TYPE
)
VALUES
(
  SEQ_WORKCATEGORY_CODE.NEXTVAL
, '휴일근무'
);
INSERT INTO WORKTYPE_CATEGORY
(
  WORKCATEGORY_CODE
, WORK_TYPE
)
VALUES
(
  SEQ_WORKCATEGORY_CODE.NEXTVAL
, '초과근무'
);
----------------------------------------------------EGV_WORK / 사원별 개인근무내역----------------------------
CREATE TABLE EGV_WORK (
      -- COLUMN LEVEL CONSTRAINT
      WORK_CODE NUMBER,
      WORKCATEGORY_CODE NUMBER,
      EMP_CODE VARCHAR2(255),
      WORK_DATE DATE DEFAULT SYSDATE CONSTRAINT NN_WORK_DATE NOT NULL,
      WORK_START TIMESTAMP CONSTRAINT NN_WORK_START NOT NULL,
      WORK_END TIMESTAMP,
      WORK_OVER NUMBER,
      -- TABLE LEVEL CONSTRAINT
      CONSTRAINT PK_WORK_CODE PRIMARY KEY (WORK_CODE),
      CONSTRAINT FK_WORKCATEGORY_CODE FOREIGN KEY(WORKCATEGORY_CODE) REFERENCES WORKTYPE_CATEGORY(WORKCATEGORY_CODE),
      CONSTRAINT FK_EMP_CODE7 FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE)
);

COMMENT ON COLUMN EGV_WORK.WORK_CODE IS '근무코드';
COMMENT ON COLUMN EGV_WORK.WORKCATEGORY_CODE IS '근무항목코드';
COMMENT ON COLUMN EGV_WORK.EMP_CODE IS '사번';
COMMENT ON COLUMN EGV_WORK.WORK_DATE IS '근무일자';
COMMENT ON COLUMN EGV_WORK.WORK_START IS '근무시작시간';
COMMENT ON COLUMN EGV_WORK.WORK_END IS '근무종료시간';
COMMENT ON COLUMN EGV_WORK.WORK_OVER IS '초과근무시간';

INSERT
  INTO EGV_WORK
(
  WORK_CODE
, WORKCATEGORY_CODE
, EMP_CODE
, WORK_DATE
, WORK_START
, WORK_END
, WORK_OVER
)
VALUES
(
  SEQ_WORK_CODE.NEXTVAL
, 2
, 2021100
, '2021-12-02'
, '2021-12-02 18:00'
, '2021-12-02 21:00'
, NULL
);
---------------------------------------------------------SALARY / 사원별 개인급여----------------------------
CREATE TABLE SALARY (
    -- COLUMN LEVEL CONSTRAINT
    SAL_CODE NUMBER,
    EMP_CODE VARCHAR2(255) CONSTRAINT NN_EMP_CODE2 NOT NULL,
    SAL_MONTH DATE,
    SAL_DAY NUMBER CONSTRAINT NN_SAL_DAY NOT NULL,
    SAL_STANDARD NUMBER CONSTRAINT NN_SAL_STANDARD NOT NULL,
    SAL_OVER NUMBER,
    SAL_FINAL NUMBER CONSTRAINT NN_SAL_FINAL NOT NULL,
    SAL_YN VARCHAR2(10) DEFAULT 'N' CONSTRAINT NN_SAL_YN NOT NULL,
    --TABLE LEVEL CONSTARINT
    CONSTRAINT PK_SAL_CODE PRIMARY KEY(SAL_CODE),
    CONSTRAINT CK_SAL_YN CHECK(SAL_YN IN ('Y', 'N')),
    CONSTRAINT FK_EMP_CODE2 FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE)
);

    COMMENT ON COLUMN SALARY.SAL_CODE IS '개인급여코드';
    COMMENT ON COLUMN SALARY.EMP_CODE IS '사번';
    COMMENT ON COLUMN SALARY.SAL_MONTH IS '해당달';
    COMMENT ON COLUMN SALARY.SAL_DAY IS '해당달 근속일';
    COMMENT ON COLUMN SALARY.SAL_STANDARD IS '해당달 기준급여';
    COMMENT ON COLUMN SALARY.SAL_OVER IS '해당달 초과근무급여';
    COMMENT ON COLUMN SALARY.SAL_FINAL IS '해당달 최종급여';
    COMMENT ON COLUMN SALARY.SAL_YN IS '해당달 급여지급여부';

---------------------------------------------ANNUAL_LEAVE_CATEGORY / 연차카테고리----------------------------
CREATE TABLE ANNUAL_LEAVE_CATEGORY (
    -- COLUMN LEVEL CONSTRAINT
    ANNUAL_LEAVE_CODE NUMBER,
    ANNUAL_LEAVE_TYPE VARCHAR2(100) CONSTRAINT NN_ANNUAL_LEAVE_TYPE NOT NULL,
    -- TABLE LEVEL CONSTRAINT
    CONSTRAINT PK_ANNUAL_LEAVE_CODE PRIMARY KEY(ANNUAL_LEAVE_CODE)
);
    COMMENT ON COLUMN ANNUAL_LEAVE_CATEGORY.ANNUAL_LEAVE_CODE IS '연차카테고리코드';
    COMMENT ON COLUMN ANNUAL_LEAVE_CATEGORY.ANNUAL_LEAVE_TYPE IS '연차항목';

INSERT
  INTO ANNUAL_LEAVE_CATEGORY
(
    ANNUAL_LEAVE_CODE, ANNUAL_LEAVE_TYPE
)
VALUES
(
    SEQ_ANNUAL_LEAVE_CODE.NEXTVAL, '병가'
);

INSERT
  INTO ANNUAL_LEAVE_CATEGORY
(
    ANNUAL_LEAVE_CODE, ANNUAL_LEAVE_TYPE
)
VALUES
(
    SEQ_ANNUAL_LEAVE_CODE.NEXTVAL, '경조사'
);

INSERT
  INTO ANNUAL_LEAVE_CATEGORY
(
    ANNUAL_LEAVE_CODE, ANNUAL_LEAVE_TYPE
)
VALUES
(
    SEQ_ANNUAL_LEAVE_CODE.NEXTVAL, '출산'
);

INSERT
  INTO ANNUAL_LEAVE_CATEGORY
(
    ANNUAL_LEAVE_CODE, ANNUAL_LEAVE_TYPE
)
VALUES
(
    SEQ_ANNUAL_LEAVE_CODE.NEXTVAL, '휴가'
);

----------------------------------------------------ANNUAL_LEAVE / 사원별 개인연차----------------------------
CREATE TABLE ANNUAL_LEAVE (
    -- COLUMN LEVEL CONSTRAINT
    AL_CODE NUMBER,
    EMP_CODE VARCHAR2(255),
    AL_YEAR NUMBER CONSTRAINT NN_AL_YEAR NOT NULL,
    AL_COUNT NUMBER CONSTRAINT NN_AL_COUNT NOT NULL,
    AL_USE_COUNT NUMBER CONSTRAINT NN_AL_USE_COUNT NOT NULL,
    -- TABLE LEVEL CONSTRAINT
    CONSTRAINT FK_EMP_CODE3 FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE),
    CONSTRAINT PK_AL_CODE PRIMARY KEY(AL_CODE)
);
    COMMENT ON COLUMN ANNUAL_LEAVE.AL_CODE IS '개인연차코드';
    COMMENT ON COLUMN ANNUAL_LEAVE.EMP_CODE IS '사번';
    COMMENT ON COLUMN ANNUAL_LEAVE.AL_YEAR IS '해당연도';
    COMMENT ON COLUMN ANNUAL_LEAVE.AL_COUNT IS '해당연도 총연차갯수';
    COMMENT ON COLUMN ANNUAL_LEAVE.AL_USE_COUNT IS '연차사용갯수';

---------------------------------------------USE_ANNUAL_LEAVE / 사원별 연차사용내역----------------------------
CREATE TABLE USE_ANNUAL_LEAVE (
    -- COLUMN LEVEL CONSTRAINT
    UAL_CODE NUMBER,
    ANNUAL_LEAVE_CODE NUMBER,
    EMP_CODE VARCHAR2(255),
    UAL_DATE DATE CONSTRAINT NN_UAL_DATE NOT NULL,
    UAL_CONTENT VARCHAR2(500),
    -- TABLE LEVEL CONSTRAINT
    CONSTRAINT PK_UAL_CODE1 PRIMARY KEY(UAL_CODE),
    CONSTRAINT FK_EMP_CODE4 FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE),
    CONSTRAINT FK_ANNUAL_LEAVE_CODE2 FOREIGN KEY(ANNUAL_LEAVE_CODE) REFERENCES ANNUAL_LEAVE_CATEGORY(ANNUAL_LEAVE_CODE)
);
    COMMENT ON COLUMN USE_ANNUAL_LEAVE.UAL_CODE IS '연차사용내역코드';
    COMMENT ON COLUMN USE_ANNUAL_LEAVE.ANNUAL_LEAVE_CODE IS '연차카테고리코드';
    COMMENT ON COLUMN USE_ANNUAL_LEAVE.EMP_CODE IS '사번';
    COMMENT ON COLUMN USE_ANNUAL_LEAVE.UAL_DATE IS '연차사용날짜';
    COMMENT ON COLUMN USE_ANNUAL_LEAVE.UAL_CONTENT IS '연차내용';


/* 전자결재 */
-------------------------------------------------------SIGN_TEMPLATE / 결재템플릿----------------------------
CREATE TABLE SIGN_TEMPLATE (
  TEMP_CODE VARCHAR2(255) NOT NULL, 
  TEMP_NAME VARCHAR2(500) NOT NULL, 
  TEMP_CONTENTS CLOB NOT NULL, 
  TEMP_EX VARCHAR2(1000) NOT NULL,
  CONSTRAINT PK_TEMP_CODE PRIMARY KEY(TEMP_CODE)
);
COMMENT ON COLUMN SIGN_TEMPLATE.TEMP_CODE IS '템플릿코드';
COMMENT ON COLUMN SIGN_TEMPLATE.TEMP_NAME IS '템플릿명';
COMMENT ON COLUMN SIGN_TEMPLATE.TEMP_CONTENTS IS '템플릿내용';
COMMENT ON COLUMN SIGN_TEMPLATE.TEMP_EX IS '템플릿설명';


INSERT
  INTO SIGN_TEMPLATE
(
  TEMP_CODE
, TEMP_NAME
, TEMP_CONTENTS
, TEMP_EX
)
VALUES
(
  SEQ_TEMP_CODE.NEXTVAL
, '휴가계획서'
, TO_CLOB('<TABLE border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none;"><TR><TD colspan="5" width="900" height="150" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 1.1pt;border-top:solid #000000 1.1pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre STYLE="text-align:center;"><SPAN STYLE="font-size:20.0pt; line-height:150%;">휴   가   계   획   서</SPAN></pre><TR><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 작성일 </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 성  명 </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 소  속</SPAN></pre></TD><TD colspan="5" width="613" height="57" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="89" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 기  간</SPAN></pre></TD><TD colspan="5"  width="305" height="89" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><br><pre><SPAN style="font-size: 16px;">               년          월          일부터</SPAN></pre><pre><SPAN style="font-size: 16px;">               년          월          일까지 </SPAN></pre><pre><SPAN style="font-size: 16px;">                                                              (     )일간</SPAN></pre><br></TD></TR>')
|| TO_CLOB('<TR><TD width="64" height="176" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 사  유</SPAN></pre></TD><TD colspan="5" width="613" height="300" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="81" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 비  고</SPAN></pre></TD><TD colspan="5" width="613" height="81" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD colspan="6" width="677" height="93" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 1.1pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><br><pre><SPAN style="font-size: 16px;">  주  의</SPAN></pre><pre><SPAN>1. 신고서는 휴가의 전일까지 제출하여 주십시오.</SPAN></pre><pre><SPAN>2. 신고서는 자기 소속장의 승인을 얻어 담당부과에 제출하여 주십시오.</SPAN></pre><br></TD></TR></TABLE>')
, '휴가계획서를 작성하시려면 해당 템플릿을 선택해주세요.'
);
INSERT
  INTO SIGN_TEMPLATE
(
  TEMP_CODE
, TEMP_NAME
, TEMP_CONTENTS
, TEMP_EX
)
VALUES
(
  SEQ_TEMP_CODE.NEXTVAL
, '시말서'
, '<TABLE border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none;"><TR><TD colspan="6" width="900" height="150" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 1.1pt;border-top:solid #000000 1.1pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre STYLE="text-align:center;"><SPAN STYLE="font-size:20.0pt; line-height:150%;">시   말   서</SPAN></pre></TD></TR><TR><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  작성일 </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  성  명  </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  소  속</SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  직  위  </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="176" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  사  유  </SPAN></pre></TD><TD colspan="5" width="613" height="176" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><div style="height: 300;"><br><br><br><br><br><br><br><br></div><br><pre STYLE="text-align:center;"><SPAN style="font-size: 16px;">상기기록 사실에 허위가 없습니다.</SPAN></pre><br><br><pre STYLE="text-align:right;"><SPAN style="font-size: 16px;">작성자 :          (인)       </SPAN></pre><br><br><br></TD></TR></TABLE>'
, '시말서를 작성하시려면 해당 템플릿을 선택해주세요.'
);
INSERT
  INTO SIGN_TEMPLATE
(
  TEMP_CODE
, TEMP_NAME
, TEMP_CONTENTS
, TEMP_EX
)
VALUES
(
  SEQ_TEMP_CODE.NEXTVAL
, '회의록'
, TO_CLOB('<TABLE border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none;"><TR><TD colspan="6" width="900" height="150" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 1.1pt;border-top:solid #000000 1.1pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre STYLE="text-align:center;"><SPAN STYLE="font-size:20.0pt; line-height:150%;">회   의   록</SPAN></pre></TD></TR><TR><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  일  시</SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  장  소  </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  작성일 </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  작성자  </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  참석자</SPAN></pre></TD><TD colspan="5" width="613" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  안  건</SPAN></pre></TD>')
|| TO_CLOB('<TD colspan="5" width="613" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="176" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 회의내용 </SPAN></pre></TD><TD colspan="5" width="613" height="400" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="130" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 결정사항 </SPAN></pre></TD><TD colspan="5" width="613" height="81" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="130" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 특이사항 </SPAN></pre></TD><TD colspan="5" width="613" height="81" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR></TABLE>')
, '회의록를 작성하시려면 해당 템플릿을 선택해주세요.'
);
INSERT
  INTO SIGN_TEMPLATE
(
  TEMP_CODE
, TEMP_NAME
, TEMP_CONTENTS
, TEMP_EX
)
VALUES
(
  SEQ_TEMP_CODE.NEXTVAL
, '업무보고서'
, '<TABLE border="1" cellspacing="0" cellpadding="0" style="border-collapse:collapse;border:none;"><TR><TD colspan="6" width="900" height="150" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 1.1pt;border-top:solid #000000 1.1pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre STYLE="text-align:center;"><SPAN STYLE="font-size:20.0pt; line-height:150%;">업  무  보  고  서</SPAN></pre></TD></TR><TR><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  작성일 </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD><TD width="64" height="50" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  작성자  </SPAN></pre></TD><TD colspan="2" width="280" height="50" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="176" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 업무내용 </SPAN></pre></TD><TD colspan="5" width="613" height="400" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="81" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;"> 특이사항 </SPAN></pre></TD><TD colspan="5" width="613" height="150" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR><TR><TD width="64" height="81" valign="middle" style="border-left:solid #000000 1.1pt;border-right:solid #000000 0.4pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"><pre><SPAN style="font-size: 16px;">  비  고</SPAN></pre></TD><TD colspan="5" width="613" height="150" valign="middle" style="border-left:solid #000000 0.4pt;border-right:solid #000000 1.1pt;border-top:solid #000000 0.4pt;border-bottom:solid #000000 0.4pt;padding:1.4pt 5.1pt 1.4pt 5.1pt"></TD></TR></TABLE>'
, '업무보고서를 작성하시려면 해당 템플릿을 선택해주세요.'
);

-------------------------------------------------------------------SIGN / 기안서----------------------------
CREATE TABLE SIGN (
  SIGN_CODE NUMBER NOT NULL,
  TEMP_CODE VARCHAR2(255) NOT NULL,
  EMP_CODE VARCHAR2(255) NOT NULL,
  SIGN_DATE DATE DEFAULT SYSDATE NOT NULL,
  SIGN_STATUS VARCHAR2(50) NOT NULL,
  SIGN_TITLE VARCHAR2(500) NOT NULL,
  FILE_CONTENTS CLOB NOT NULL,
  CONSTRAINT PK_SIGN_CODE PRIMARY KEY(SIGN_CODE),
  CONSTRAINT FK_SIGN_TEMP_CODE FOREIGN KEY (TEMP_CODE) REFERENCES SIGN_TEMPLATE(TEMP_CODE),
  CONSTRAINT FK_SIGN_EMP_CODE FOREIGN KEY (EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE),
  CONSTRAINT CK_SIGN_STATUS CHECK(SIGN_STATUS IN('임시저장', '결재중', '결재완료', '반려'))
);
COMMENT ON COLUMN SIGN.SIGN_CODE IS '기안서코드';
COMMENT ON COLUMN SIGN.TEMP_CODE IS '템플릿코드';
COMMENT ON COLUMN SIGN.EMP_CODE IS '기안서작성자 사원코드';
COMMENT ON COLUMN SIGN.SIGN_DATE IS '기안서작성일';
COMMENT ON COLUMN SIGN.SIGN_STATUS IS '결재상태';
COMMENT ON COLUMN SIGN.SIGN_TITLE IS '기안서제목';
COMMENT ON COLUMN SIGN.FILE_CONTENTS IS '기안서내용';


INSERT
  INTO SIGN
(
  SIGN_CODE
, TEMP_CODE
, EMP_CODE
, SIGN_DATE
, SIGN_STATUS
, SIGN_TITLE
, FILE_CONTENTS
)
VALUES
(
  SEQ_SIGN_CODE.NEXTVAL
, 1
, 2021100
, SYSDATE
, '임시저장'
, '가가가 직원의 휴가계획서입니다.'
, '~~~~ 임시 기안서 내용입니다. ~~~'
);
INSERT
  INTO SIGN
(
  SIGN_CODE
, TEMP_CODE
, EMP_CODE
, SIGN_DATE
, SIGN_STATUS
, SIGN_TITLE
, FILE_CONTENTS
)
VALUES
(
  SEQ_SIGN_CODE.NEXTVAL
, 2
, 2021100
, SYSDATE
, '결재중'
, '나나나 직원의 시말서입니다.'
, '~~~~ 임시 시말서 내용입니다. ~~~'
);
INSERT
  INTO SIGN
(
  SIGN_CODE
, TEMP_CODE
, EMP_CODE
, SIGN_DATE
, SIGN_STATUS
, SIGN_TITLE
, FILE_CONTENTS
)
VALUES
(
  SEQ_SIGN_CODE.NEXTVAL
, 3
, 2021100
, SYSDATE
, '반려'
, '다다다 직원의 회의록입니다.'
, '~~~~ 임시 회의록 내용입니다. ~~~'
);
INSERT
  INTO SIGN
(
  SIGN_CODE
, TEMP_CODE
, EMP_CODE
, SIGN_DATE
, SIGN_STATUS
, SIGN_TITLE
, FILE_CONTENTS
)
VALUES
(
  SEQ_SIGN_CODE.NEXTVAL
, 4
, 2021100
, SYSDATE
, '결재완료'
, '라라라 직원의 업무보고서입니다.'
, '~~~~ 임시 업무보고서 내용입니다. ~~~'
);

---------------------------------------------------------------REFERRER / 참조자----------------------------
CREATE TABLE REFERRER (
    -- COLUMN LEVEL CONSTRAINT
    REFERRER_CODE NUMBER,
    EMP_CODE VARCHAR2(255),
    SIGN_CODE NUMBER,
    REFERRER_YN VARCHAR2(10) DEFAULT 'N' CONSTRAINT NN_REFERRER_YN NOT NULL,
    -- TABLE LEVEL CONSTRAINT
    CONSTRAINT PK_REFERRER_CODE PRIMARY KEY (REFERRER_CODE),
    CONSTRAINT CK_REFERRER_YN CHECK (REFERRER_YN IN('Y', 'N')),
    CONSTRAINT PK_REFERRER_EMP_CODE FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE),
    CONSTRAINT PF_REFERRER_SIGN_CODE FOREIGN KEY(SIGN_CODE) REFERENCES SIGN(SIGN_CODE)
);

COMMENT ON COLUMN REFERRER.REFERRER_CODE IS '참조코드';
COMMENT ON COLUMN REFERRER.EMP_CODE IS '참조자 사번';
COMMENT ON COLUMN REFERRER.SIGN_CODE IS '기안서 코드';
COMMENT ON COLUMN REFERRER.REFERRER_YN IS '읽음 여부';


INSERT
  INTO REFERRER
(
  REFERRER_CODE
, EMP_CODE
, SIGN_CODE
, REFERRER_YN
)
VALUES
(
  SEQ_REFERRER_CODE.NEXTVAL
, 2021102
, 1
, 'Y'
);

INSERT
  INTO REFERRER
(
  REFERRER_CODE
, EMP_CODE
, SIGN_CODE
, REFERRER_YN
)
VALUES
(
  SEQ_REFERRER_CODE.NEXTVAL
, 2021102
, 2
, 'N'
);

INSERT
  INTO REFERRER
(
  REFERRER_CODE
, EMP_CODE
, SIGN_CODE
, REFERRER_YN
)
VALUES
(
  SEQ_REFERRER_CODE.NEXTVAL
, 2021102
, 3
, 'N' 
);

INSERT
  INTO REFERRER
(
  REFERRER_CODE
, EMP_CODE
, SIGN_CODE
, REFERRER_YN
)
VALUES
(
  SEQ_REFERRER_CODE.NEXTVAL
, 2021102
, 4
, 'N'
);

---------------------------------------------------------------APPROVER / 결재자----------------------------
CREATE TABLE APPROVER (
    -- COLUMN LEVEL CONSTRAINT
    APPROVER_CODE NUMBER,
    EMP_CODE VARCHAR2(255),
    SIGN_CODE NUMBER,
    APPROVER_ORDER NUMBER,
    APPROVER_STATUS VARCHAR2(50) DEFAULT '대기' CONSTRAINT NN_APPROVER_STATUS NOT NULL,
    APPROVER_DATE DATE,
    -- TABLE LEVEL CONSTRAINT
    CONSTRAINT PK_APPROVER_CODE PRIMARY KEY (APPROVER_CODE),
    CONSTRAINT CK_APPROVER_STATUS CHECK (APPROVER_STATUS IN ('대기', '반려', '승인')),
    CONSTRAINT FK_APPROVER_EMP_CODE FOREIGN KEY (EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE),
    CONSTRAINT FK_APPROVER_SIGN_CODE FOREIGN KEY (SIGN_CODE) REFERENCES SIGN(SIGN_CODE)
);

COMMENT ON COLUMN APPROVER.APPROVER_CODE IS '결재코드';
COMMENT ON COLUMN APPROVER.EMP_CODE IS '결재자 사번';
COMMENT ON COLUMN APPROVER.SIGN_CODE IS '결재코드';
COMMENT ON COLUMN APPROVER.APPROVER_ORDER IS '결재 순번';
COMMENT ON COLUMN APPROVER.APPROVER_STATUS IS '결재 상태';
COMMENT ON COLUMN APPROVER.APPROVER_DATE IS '결재 일자';

INSERT
  INTO APPROVER
(
  APPROVER_CODE
, EMP_CODE
, SIGN_CODE
, APPROVER_ORDER
, APPROVER_STATUS
)
VALUES
(
  SEQ_APPROVER_CODE.NEXTVAL
, 2021101
, 1
, 1
, '대기' 
);

INSERT
  INTO APPROVER
(
  APPROVER_CODE
, EMP_CODE
, SIGN_CODE
, APPROVER_ORDER
, APPROVER_STATUS
, APPROVER_DATE
)
VALUES
(
  SEQ_APPROVER_CODE.NEXTVAL
, 2021101
, 2
, 1
, '반려'
, SYSDATE
);

INSERT
  INTO APPROVER
(
  APPROVER_CODE
, EMP_CODE
, SIGN_CODE
, APPROVER_ORDER
, APPROVER_STATUS
, APPROVER_DATE
)
VALUES
(
  SEQ_APPROVER_CODE.NEXTVAL
, 2021101
, 3
, 1
, '승인'
, SYSDATE
);

INSERT
  INTO APPROVER
(
  APPROVER_CODE
, EMP_CODE
, SIGN_CODE
, APPROVER_ORDER
, APPROVER_STATUS
)
VALUES
(
  SEQ_APPROVER_CODE.NEXTVAL
, 2021101
, 4
, 1
, '대기'
);

-------------------------------------------------------------SIGN_COMMENT / 첨언----------------------------
CREATE TABLE SIGN_COMMENT (
  SIGN_COM_CODE NUMBER NOT NULL,
  EMP_CODE VARCHAR2(255) NOT NULL,
  SIGN_CODE NUMBER NOT NULL,
  SIGN_COM_CONTENTS VARCHAR2(1000) NOT NULL,
  SIGN_COM_DATE DATE DEFAULT SYSDATE NOT NULL,
  CONSTRAINT PK_SIGN_COM_CODE PRIMARY KEY(SIGN_COM_CODE),
  CONSTRAINT FK_SIGN_COMMENT_EMP_CODE FOREIGN KEY (EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE),
  CONSTRAINT FK_SIGN_COMMENT_SIGN_CODE FOREIGN KEY (SIGN_CODE) REFERENCES SIGN(SIGN_CODE)
);
COMMENT ON COLUMN SIGN_COMMENT.SIGN_COM_CODE IS '첨언코드';
COMMENT ON COLUMN SIGN_COMMENT.EMP_CODE IS '첨언작성자 사원코드';
COMMENT ON COLUMN SIGN_COMMENT.SIGN_CODE IS '기안서코드';
COMMENT ON COLUMN SIGN_COMMENT.SIGN_COM_CONTENTS IS '첨언내용';
COMMENT ON COLUMN SIGN_COMMENT.SIGN_COM_DATE IS '첨언작성일';


INSERT
  INTO SIGN_COMMENT
(
  SIGN_COM_CODE
, EMP_CODE
, SIGN_CODE
, SIGN_COM_CONTENTS
, SIGN_COM_DATE
)
VALUES
(
  SEQ_SIGN_COM_CODE.NEXTVAL
, 2021101
, 3
, '다시 수정해서 작성하세요!!'
, SYSDATE
);


/* 게시판 */
------------------------------------------------------------OFFICIAL / 공문게시판----------------------------
CREATE TABLE OFFICIAL (
  -- COLUMN LEVEL CONSTRAINT
  OFFICIAL_CODE NUMBER NOT NULL,
  OFFICIAL_TITLE VARCHAR2(500) NOT NULL,
  OFFICIAL_CONTENT VARCHAR2(4000) NOT NULL,
  OFFICIAL_DATE DATE NOT NULL,
  EMP_CODE VARCHAR2(255) NOT NULL,
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_OFFICIAL_CODE PRIMARY KEY(OFFICIAL_CODE),
  CONSTRAINT FK_OFFICIAL_EMP_CODE FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE)
);

COMMENT ON COLUMN OFFICIAL.OFFICIAL_CODE IS '공문코드';
COMMENT ON COLUMN OFFICIAL.OFFICIAL_TITLE IS '제목';
COMMENT ON COLUMN OFFICIAL.OFFICIAL_CONTENT IS '내용';
COMMENT ON COLUMN OFFICIAL.OFFICIAL_DATE IS '작성일';
COMMENT ON COLUMN OFFICIAL.EMP_CODE IS '사번';

---------------------------------------------------------OFFICIAL_FILE / 공문파일----------------------------
CREATE TABLE "OFFICIAL_FILE" (
  -- COLUMN LEVEL CONSTRAINT
  OFFICIAL_FILE_CODE NUMBER NOT NULL,
  OFFICIAL_CODE NUMBER NOT NULL,
  OFFICIAL_FILE_ORIG_NAME VARCHAR2(500) NOT NULL,
  OFFICIAL_FILE_UUID_NAME VARCHAR2(500) NOT NULL,
  OFFICIAL_FILE_IMG_PATH VARCHAR2(500) NOT NULL,
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_OFFICIAL_FILE_CODE PRIMARY KEY(OFFICIAL_FILE_CODE),
  CONSTRAINT FK_OFFICIAL_CODE FOREIGN KEY(OFFICIAL_CODE) REFERENCES OFFICIAL(OFFICIAL_CODE)
);

COMMENT ON COLUMN OFFICIAL_FILE.OFFICIAL_FILE_CODE IS '공문파일코드';
COMMENT ON COLUMN OFFICIAL_FILE.OFFICIAL_CODE IS '공문코드';
COMMENT ON COLUMN OFFICIAL_FILE.OFFICIAL_FILE_ORIG_NAME IS '공문파일원본명';
COMMENT ON COLUMN OFFICIAL_FILE.OFFICIAL_FILE_UUID_NAME IS '공문파일신규명';
COMMENT ON COLUMN OFFICIAL_FILE.OFFICIAL_FILE_IMG_PATH IS '공문파일경로';

--------------------------------------------------------------NOTICE / 공지게시판----------------------------
CREATE TABLE NOTICE (
  -- COLUMN LEVEL CONSTRAINT
  NOTICE_CODE NUMBER NOT NULL,
  NOTICE_TITLE VARCHAR2(500) NOT NULL,
  NOTICE_CONTENT VARCHAR2(4000) NOT NULL,
  NOTICE_DATE DATE NOT NULL,
  EMP_CODE VARCHAR2(255) NOT NULL,
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_NOTICE_CODE PRIMARY KEY(NOTICE_CODE),
  CONSTRAINT FK_NOTICE_EMP_CODE FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE)
);

COMMENT ON COLUMN NOTICE.NOTICE_CODE IS '공지코드';
COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '제목';
COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '내용';
COMMENT ON COLUMN NOTICE.NOTICE_DATE IS '작성일';
COMMENT ON COLUMN NOTICE.EMP_CODE IS '사번';

-----------------------------------------------------------NOTICE_FILE / 공지파일----------------------------
CREATE TABLE "NOTICE_FILE" (
  -- COLUMN LEVEL CONSTRAINT
  NOTICE_FILE_CODE NUMBER NOT NULL,
  NOTICE_CODE NUMBER NOT NULL,
  NOTICE_FILE_ORIG_NAME VARCHAR2(500) NOT NULL,
  NOTICE_FILE_UUID_NAME VARCHAR2(500) NOT NULL,
  NOTICE_FILE_IMG_PATH VARCHAR2(500) NOT NULL,
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_NOTICE_FILE_CODE PRIMARY KEY(NOTICE_FILE_CODE),
  CONSTRAINT FK_NOTICE_CODE FOREIGN KEY(NOTICE_CODE) REFERENCES NOTICE(NOTICE_CODE)
);

COMMENT ON COLUMN NOTICE_FILE.NOTICE_FILE_CODE IS '공지파일코드';
COMMENT ON COLUMN NOTICE_FILE.NOTICE_CODE IS '공지코드';
COMMENT ON COLUMN NOTICE_FILE.NOTICE_FILE_ORIG_NAME IS '공지파일원본명';
COMMENT ON COLUMN NOTICE_FILE.NOTICE_FILE_UUID_NAME IS '공지파일신규명';
COMMENT ON COLUMN NOTICE_FILE.NOTICE_FILE_IMG_PATH IS '공지파일경로';

----------------------------------------------------------BLIND_POST / 익명게시판----------------------------
CREATE TABLE BLIND_POST (
  -- COLUMN LEVEL CONSTRAINT
  POST_CODE NUMBER NOT NULL,
  POST_DATE DATE NOT NULL,
  POST_TITLE VARCHAR2(500) NOT NULL,
  POST_CONTENT VARCHAR2(4000) NOT NULL,
  EMP_CODE VARCHAR2(255) NOT NULL,
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_POST_CODE PRIMARY KEY(POST_CODE),
  CONSTRAINT FK_BLIND_POST_EMP_CODE FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE)
);

COMMENT ON COLUMN BLIND_POST.POST_CODE IS '게시글코드';
COMMENT ON COLUMN BLIND_POST.POST_DATE IS '작성일자';
COMMENT ON COLUMN BLIND_POST.POST_TITLE IS '게시글제목';
COMMENT ON COLUMN BLIND_POST.POST_CONTENT IS '게시글내용';
COMMENT ON COLUMN BLIND_POST.EMP_CODE IS '사번';

------------------------------------------------------------------COMMENT / 댓글----------------------------
CREATE TABLE CMT (
  -- COLUMN LEVEL CONSTRAINT
  CMT_CODE NUMBER NOT NULL,
  POST_CODE NUMBER NOT NULL,
  CMT_DATE DATE DEFAULT SYSDATE NOT NULL,
  CMT_CONTENTS VARCHAR2(2000) NOT NULL,
  EMP_CODE VARCHAR2(255)  NOT NULL,
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_CMT_CODE PRIMARY KEY(CMT_CODE),
  CONSTRAINT FK_POST_CODE FOREIGN KEY(POST_CODE) REFERENCES BLIND_POST(POST_CODE),
  CONSTRAINT FK_CMT_EMP_CODE FOREIGN KEY(EMP_CODE) REFERENCES EMPLOYEE(EMP_CODE)
);

COMMENT ON COLUMN CMT.CMT_CODE IS '댓글코드';
COMMENT ON COLUMN CMT.POST_CODE IS '게시글코드';
COMMENT ON COLUMN CMT.CMT_DATE IS '작성일자';
COMMENT ON COLUMN CMT.CMT_CONTENTS IS '댓글내용';
COMMENT ON COLUMN CMT.EMP_CODE IS '사번';





/* 영화 */
-------------------- 상영관 THEATER --------------------
CREATE TABLE THEATER (
  -- COLUMN LEVEL CONSTRAINT
  THEATER_CODE NUMBER NOT NULL,
  THEATER_NAME VARCHAR2(255) NOT NULL,
  OCCUPANCY NUMBER NOT NULL,
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_THEATER_CODE PRIMARY KEY(THEATER_CODE)
);

COMMENT ON COLUMN THEATER.THEATER_CODE IS '상영관코드';
COMMENT ON COLUMN THEATER.THEATER_NAME IS '상영관명';
COMMENT ON COLUMN THEATER.OCCUPANCY IS '수용인원';

INSERT INTO THEATER VALUES(SEQ_THEATER_CODE.NEXTVAL, '프리미엄1관', 24);
INSERT INTO THEATER VALUES(SEQ_THEATER_CODE.NEXTVAL, '프리미엄2관', 24);
INSERT INTO THEATER VALUES(SEQ_THEATER_CODE.NEXTVAL, '일반3', 280);
INSERT INTO THEATER VALUES(SEQ_THEATER_CODE.NEXTVAL, '일반4', 280);
INSERT INTO THEATER VALUES(SEQ_THEATER_CODE.NEXTVAL, '일반5', 150);
INSERT INTO THEATER VALUES(SEQ_THEATER_CODE.NEXTVAL, '일반6', 150);
INSERT INTO THEATER VALUES(SEQ_THEATER_CODE.NEXTVAL, '일반7', 150);
INSERT INTO THEATER VALUES(SEQ_THEATER_CODE.NEXTVAL, '일반8', 150);

-------------------- 영화 MOVIE --------------------
CREATE TABLE MOVIE (
  -- COLUMN LEVEL CONSTRAINT
  MOVIE_CODE NUMBER NOT NULL,
  MOVIE_NAME VARCHAR2(255) NOT NULL,
  OPENING_DATE DATE NOT NULL,
  RUNNINGTIME NUMBER NOT NULL,
  GRADE VARCHAR2(255) NOT NULL,
  GENRE VARCHAR2(255) NOT NULL,
  DISTRIBUTOR VARCHAR2(255) NOT NULL,
  DIRECTOR VARCHAR2(255) NOT NULL,
  COUNTRY VARCHAR2(255) NOT NULL,
  POSTER_ORIG_NAME VARCHAR2(500) NOT NULL,
  POSTER_UUID_NAME VARCHAR2(500) NOT NULL,
  POSTER_IMG_PATH VARCHAR2(500) NOT NULL,
  OPENING_YN VARCHAR2(255) DEFAULT('N') NOT NULL,
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_MOVIE_CODE PRIMARY KEY(MOVIE_CODE),
  CONSTRAINT CK_OPENING_YN CHECK(OPENING_YN IN('Y', 'N'))
);

COMMENT ON COLUMN MOVIE.MOVIE_CODE IS '영화코드';
COMMENT ON COLUMN MOVIE.MOVIE_NAME IS '영화제목';
COMMENT ON COLUMN MOVIE.OPENING_DATE IS '개봉일';
COMMENT ON COLUMN MOVIE.RUNNINGTIME IS '러닝타임';
COMMENT ON COLUMN MOVIE.GRADE IS '등급';
COMMENT ON COLUMN MOVIE.GENRE IS '장르';
COMMENT ON COLUMN MOVIE.DISTRIBUTOR IS '배급사';
COMMENT ON COLUMN MOVIE.DIRECTOR IS '감독명';
COMMENT ON COLUMN MOVIE.COUNTRY IS '국가';
COMMENT ON COLUMN MOVIE.POSTER_ORIG_NAME IS '포스터원본명';
COMMENT ON COLUMN MOVIE.POSTER_UUID_NAME IS '포스터신규명';
COMMENT ON COLUMN MOVIE.POSTER_IMG_PATH IS '포스터저장경로';
COMMENT ON COLUMN MOVIE.OPENING_YN IS '우리관개봉여부';

INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '알 포인트', TO_DATE('2008-08-13'), 108, '15세', '공포',
'시네마 서비스', '공수창', '한국', 'poster_알포인트.png', 'poster_알포인트.png', 'img/poster/', 'N');
INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '이터널스', TO_DATE('2021-11-03'), 155, '12세', '액션',
'월트디즈니', '클로이 자오', '미국', 'poster_이터널스.jpg', 'poster_이터널스.jpg', 'img/poster/', 'Y');
INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '듄', TO_DATE('2021-10-20'), 155, '12세', 'SF',
'워너 브라더스', '드니 빌뇌브', '미국', 'poster_듄.jpg', 'poster_듄.jpg', 'img/poster/', 'Y');
INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '고장난 론', TO_DATE('2021-10-27'), 106, '전체', '애니메이션',
'20세기 폭스', '사라 스미스', '미국', 'poster_고장난_론.png', 'poster_고장난_론.png', 'img/poster/', 'Y');
INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '베놈 2: 렛 데어 비 카니지', TO_DATE('2021-10-13'), 97, '15세', '액션',
'소니 픽처스', '댄디 서키스', '미국', 'poster_베놈2.jpg', 'poster_베놈2.jpg', 'img/poster/', 'Y');
INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '강릉', TO_DATE('2021-11-10'), 119, '청불', '범죄',
'제이앤씨미디어', '윤영빈', '한국', 'poster_강릉.jpg', 'poster_강릉.jpg', 'img/poster/', 'Y');
INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '귀멸의 칼날: 남매의 연', TO_DATE('2021-11-10'), 104, '15세', '애니메이션',
'도호', '소토자키하루오', '일본', 'poster_귀멸의칼날_남매의연.jpg', 'poster_귀멸의칼날_남매의연.jpg', 'img/poster/', 'Y');
INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '고스트버스터즈 라이즈', TO_DATE('2021-12-01'), 124, '12세', '어드벤쳐',
'소니 픽처스', '제이슨 라이트만', '미국', 'poster_고스트버스터즈_라이즈.jpg', 'poster_고스트버스터즈_라이즈.jpg', 'img/poster/', 'Y');
INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '킹메이커', TO_DATE('2021-12-01'), 120, '12세', '드라마',
'메가박스', '변성현', '한국', 'poster_킹메이커.jpg', 'poster_킹메이커.jpg', 'img/poster/', 'Y');
INSERT INTO MOVIE VALUES(SEQ_MOVIE_CODE.NEXTVAL, '매트릭스: 리저렉션', TO_DATE('2021-12-22'), 140, '15세', 'SF',
'워너 브라더스', '라나 워쇼스키', '미국', 'poster_매트릭스_리저렉션.jpg', 'poster_매트릭스_리저렉션.jpg', 'img/poster/', 'Y');

-------------------- 이벤트 EVENT --------------------
CREATE TABLE EVENT (
  -- COLUMN LEVEL CONSTRAINT
  EVENT_CODE NUMBER NOT NULL,
  EVENT_NAME VARCHAR2(255) NOT NULL,
  START_DATETIME TIMESTAMP NOT NULL,
  END_DATETIME TIMESTAMP NOT NULL,
  RENTAL_COMPANY VARCHAR2(255),
  MOVIE_CODE NUMBER,
  EVENT_PRODUCT VARCHAR2(255),
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_EVENT_CODE PRIMARY KEY(EVENT_CODE),
  CONSTRAINT FK_MOVIE_CODE1 FOREIGN KEY(MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE)
);

COMMENT ON COLUMN EVENT.EVENT_CODE IS '이벤트코드';
COMMENT ON COLUMN EVENT.EVENT_NAME IS '이벤트명';
COMMENT ON COLUMN EVENT.START_DATETIME IS '시작일';
COMMENT ON COLUMN EVENT.END_DATETIME IS '종료일';
COMMENT ON COLUMN EVENT.RENTAL_COMPANY IS '대관회사';
COMMENT ON COLUMN EVENT.MOVIE_CODE IS '영화코드';
COMMENT ON COLUMN EVENT.EVENT_PRODUCT IS '이벤트상품';

INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '<이터널스> 현장 증정 이벤트',
'2021-11-26 00:00', '2021-12-08 00:00', null, 2, '캐릭터 에폭시 마그넷 11종');
INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '<이터널스> 도전! N차 관람',
'2021-11-03 00:00', '2021-11-30 00:00', null, 2, '오리지널 굿즈');
INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '<귀멸의 칼날: 남매의 연> 2주차 현장 경품 증정 이벤트',
'2021-11-17 00:00', '2021-11-30 00:00', null, 7, 'A3사이즈 포스터');
INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '<듄> Signature ART CARD No.50',
'2021-10-20 00:00', '2021-11-30 00:00', null, 3, '<듄> Signature Art Card');
INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '<고장난 론> Signature ART CARD No.51',
'2021-10-27 00:00', '2021-11-30 00:00', null, 3, '<고장난 론> Signature Art Card');
INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '<유체이탈자> 무대인사 이벤트',
'2021-11-27 00:00', '2021-11-27 00:00', '메가박스중앙(주)플러스엠', null, null);
INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '<장르만 로맨스> 무대인사 이벤트',
'2021-11-27 00:00', '2021-11-27 00:00', '넥스트엔터테인먼트월드', null, null);
INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '<연애 빠진 로맨스> 무대인사 이벤트',
'2021-11-27 00:00', '2021-11-27 00:00', 'CJENM', null, null);
INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '[한사랑산악회] 제12회 정기미팅 대관',
'2021-11-11 18:00', '2021-11-11 21:00', '한사랑산악회', null, null);
INSERT INTO EVENT VALUES(SEQ_EVENT_CODE.NEXTVAL, '[더조은] 자바A 스마트3회차 수료식',
'2021-12-08 14:00', '2021-12-08 18:50', '더조은컴퓨터아카데미', null, '수료증과 그의 손에 쥐어지는 합격 목걸이');

-------------------- 상영 스케줄 SCREENING_SCHEDULE --------------------
CREATE TABLE SCREENING_SCHEDULE (
  -- COLUMN LEVEL CONSTRAINT
  SCREENING_CODE NUMBER NOT NULL,
  MOVIE_CODE NUMBER NOT NULL,
  THEATER_CODE NUMBER NOT NULL,
  SCREENING_START DATE NOT NULL,
  SCREENING_END DATE NOT NULL,
  -- COLUMN LEVEL CONSTRAINT
  CONSTRAINT PK_SCREENING_CODE PRIMARY KEY(SCREENING_CODE),
  CONSTRAINT FK_MOVIE_CODE2 FOREIGN KEY(MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE),
  CONSTRAINT FK_THEATER_CODE FOREIGN KEY(THEATER_CODE) REFERENCES THEATER(THEATER_CODE)
);

COMMENT ON COLUMN SCREENING_SCHEDULE.SCREENING_CODE IS '상영스케줄코드';
COMMENT ON COLUMN SCREENING_SCHEDULE.MOVIE_CODE IS '영화코드';
COMMENT ON COLUMN SCREENING_SCHEDULE.THEATER_CODE IS '상영관코드';
COMMENT ON COLUMN SCREENING_SCHEDULE.SCREENING_START IS '상영시작기간';
COMMENT ON COLUMN SCREENING_SCHEDULE.SCREENING_END IS '상영종료기간';
